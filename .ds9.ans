#   Additional shortcuts (defined in ~/.ds9.ans)
#   v03 (2021-12-09) by Mathias Zechmeister
#   to emulate shortcuts using ds9 binding via load analysis
#   see also ~/bin/ds9pan and ~/bin/ds9zoom
#
# use | $null to suppress newlines

Additional shortcuts...
*
menu
awk "/^.   /; /^bind/{$1=\"\";$2=sprintf(\"%-15s\",$2); print}" $env(HOME)/.ds9.ans | $text
# The menu appears twice, when ds9 is started in the home directory.

*
*
bind h   # help for short cuts
awk "/^.   /; /^bind/{$1=\"\";$2=sprintf(\"%-15s\",$2); print}" $env(HOME)/.ds9.ans | $text

#awk "/^bind/{$1=\"\";$2=sprintf(\"%-15s\",$2); print}" $env(HOME)/.ds9.ans | $text

# awk '/^bind/{$1=""; $3="\t-"; print}' ~/.ds9.ans | $text

*
*
bind i # zoom in
xpaset -p  "$xpa_method" zoom 2 | $null

*
*
bind KP_Add # zoom in
xpaset -p  "$xpa_method" zoom 2 | $null

*
*
bind o # zoom out
xpaset -p  "$xpa_method" zoom 0.5 | $null

*
*
bind KP_Subtract # zoom out
xpaset -p  "$xpa_method" zoom 0.5 | $null

*
*
bind u # zoom to fit
xpaset -p  "$xpa_method" zoom to fit | $null

*
*
bind Alt-u # zoom to fit both
~/bin/ds9zoom u "$xpa_method" "$width" "$height" | $null

*
*
bind Alt-x # zoom to fit x
sh -c "~/bin/ds9zoom x $xpa_method $width $height; ds9pan home $xpa_method" | $null
#~/bin/ds9zoom x "$xpa_method" "$width" "$height" | $null

*
*
bind Alt-y # zoom to fit y
sh -c "~/bin/ds9zoom y $xpa_method $width $height; ds9pan home $xpa_method" | $null
#~/bin/ds9zoom y "$xpa_method" "$width" "$height" | $null

*
*
bind Shift-Key-Left  # pan left (bind a)
~/bin/ds9pan left "$xpa_method" | $null

*
*
bind Shift-Key-Right  # pan right (bind d)
~/bin/ds9pan right "$xpa_method" | $null
*
*
bind Shift-Key-Up  # pan up (bind w)
~/bin/ds9pan up "$xpa_method" | $null

*
*
bind Shift-Key-Down   # pan down (bind s)
~/bin/ds9pan down "$xpa_method" | $null

*
*
bind Next # pan page down (PageDown)
~/bin/ds9pan pagedown "$xpa_method" | $null

*
*
bind Control-Next # pan to bottom (Ctrl-PageDown)
~/bin/ds9pan bottom "$xpa_method" | $null

*
*
bind Prior # pan page up (PageUp)
~/bin/ds9pan pageup "$xpa_method" | $null

*
*
bind Control-Prior # pan to top (Ctrl-PageUp)
~/bin/ds9pan top "$xpa_method" | $null

*
*
bind Home # pan pageleft
~/bin/ds9pan pageleft "$xpa_method" | $null

*
*
bind Control-Home # pan to left margin
~/bin/ds9pan home "$xpa_method" | $null

*
*
bind End # pan page right
~/bin/ds9pan pageright "$xpa_method" | $null

*
*
bind Control-End # pan to right margin
~/bin/ds9pan end "$xpa_method" | $null

*
*
bind p # mode pan
xpaset -p "$xpa_method"  mode pan | $null

*
*
bind z # mode zoom
xpaset -p  "$xpa_method"  mode zoom | $null

*
*
bind r # rotate by 90 deg
xpaset -p  "$xpa_method"  rotate 90 | $null

*
*
bind y # zoom in y
xpaset -p  "$xpa_method"  zoom 1 2 | $null

*
*
bind Control-Up # zoom in y
xpaset -p  "$xpa_method"  zoom 1 2 | $null

*
*
bind Y # zoom out y
xpaset -p  "$xpa_method"  zoom 1 .5 | $null

*
*
bind Control-Down # zoom out y
xpaset -p  "$xpa_method"  zoom 1 .5 | $null

*
*
bind x # zoom in x
xpaset -p  "$xpa_method"  zoom 2 1 | $null

*
*
bind Control-Right # zoom in x
xpaset -p  "$xpa_method"  zoom 2 1 | $null

*
*
bind X # zoom out x
xpaset -p  "$xpa_method"  zoom .5 1 | $null

*
*
bind Control-Left # zoom out x
xpaset -p  "$xpa_method"  zoom .5 1 | $null

*
*
bind Alt-Left # move cursor by one pixel
~/bin/ds9pan curleft  "$xpa_method" | $null

*
*
bind Alt-Right # move cursor by one pixel
~/bin/ds9pan curright  "$xpa_method" | $null

*
*
bind Alt-Up # move cursor by one pixel
~/bin/ds9pan curup  "$xpa_method" | $null

*
*
bind Alt-Down # move cursor by one pixel
~/bin/ds9pan curdown  "$xpa_method" | $null


*
*
bind b # cmap bb
xpaset -p  "$xpa_method" cmap bb | $null

*
*
bind B # cmap grey
xpaset -p  "$xpa_method" cmap grey | $null

*
*
bind m # match frames image
xpaset -p  "$xpa_method" match frames image | $null

*
*
bind M  # match scale and colorbar
sh -c "xpaset -p  $xpa_method match scale; xpaset -p  $xpa_method match colorbar" | $null
# We need this trick to execute multiple command.

*
*
bind l  # lock frames image
xpaset -p  "$xpa_method" lock frame image | $null

*
*
bind L  # lock frames image
sh -c "xpaset -p  $xpa_method lock scale; xpaset -p  $xpa_method lock colorbar" | $null

*
*
bind Alt-l  # lock frames image
sh -c "xpaset -p  $xpa_method lock scale no; xpaset -p  $xpa_method lock colorbar no" | $null

*
*
bind Control-w   # frame delete
xpaset -p  "$xpa_method" frame delete | $null

*
*
bind Control-q   # quit
xpaset -p  "$xpa_method" quit | $null

*
*
bind q
echo $pan(fk5,sexagesimal) | $text

*
*
bind j
$data | $image(current)

*
*
bind J
$data | $text

*
*
bind I
echo "$bitpix $width $height $depth pan: $pan mouse: $x $y $z xpa $xpa $xpa_method $xcen $ycen $xdim $ydim $rotate scale $::scale" | $text

*
*
bind F5   # toggle view buttons panner magnifier info
sh -c "s=`xpaget $xpa_method view info | sed 's/yes/ no/; s/^no/yes/'`; for f in buttons panner magnifier info; do xpaset -p $xpa_method view \$f \$s; done" | $null

# The pipe does not work when called inside ds9 (debug/console; analysis)
# It works, however, when called externally from bash!?
Take Snapshot
*
bind Alt-c
xpaset -p "$xpa_method" tcl "exec import -window [winfo id .] png:- | xclip -sel clip -t image/png | echo"

Take Snapshot (Alt-c)
*
menu
xpaset -p "$xpa_method" tcl "exec import -window [winfo id .] png:- | xclip -sel clip -t image/png | echo"


Take Snapshot as ~/ids9tmp.png
*
bind Alt-C
xpaset -p "$xpa_method" tcl "exec import -window [winfo id .] $::env(HOME)/ids9tmp.png"

Take Snapshot ~/ids9tmp.png (Alt-C)
*
menu
xpaset -p "$xpa_method" tcl "exec import -window [winfo id .] $::env(HOME)/ids9tmp.png"


